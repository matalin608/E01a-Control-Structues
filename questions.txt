Open main1.py. Before running it, what do you expect this program to do? 
    I expect this program to print the words "Greetings!" and "What is your favorite color?" with an option to input my own answer after the question.

Now right click on the window and select “Run Python File in Terminal”. Click in the bottom panel, and answer the question. Describe what happened. 

    The program printed both sentences and allowed me to type an answer after the second string. 

What do you think the program did with what you typed?
    I am unsure, but I believe the program saved my answer within the program. 



Open main2.py. Before running it, describe how this is different than main1.py. 

    This file contains an additional command at the end. 

What do you think the color = input() will do? 
    I believe this will print the word that I enter at the end of the variable "color" 

Run the program in the terminal and answer the question. Did the program do what you expected?
    The program reprinted the answer I entered, which is similar to what I expected. 



Open main3.py. Before running it, describe how this is different than main2.py. 

    This file contains more additional commands, which appear to be conditional. 

What is happening on lines 11–14? 
    The program appears to be presenting a condition that will give back an answer depending on what I enter. 

Why are lines 12 and 14 indented? 
    I am unsure, but my best guess is for human readability. 

Run the program and answer the question. What happens if you don’t capitalize Red? 
    If I don't capitalize red, then the program replies "Sorry, try again," 

What does this tell you about "color"?
   I believe that Color is a variable that can be manipulated if conditions are presented. 



Open main4.py. Before running it, describe how this is different than main2.py. 
    This offers another possible solution to the question posed by the code.

What problem is this trying to solve? 
    Before, the correct answer could be entered, but the program would give an error message if the answer was not properly capitalized. Here, the answer can be entered multtiple ways.

Run the program and answer the question. What happens if you use some other capitalization scheme (i.e., “RED” or “reD“)?
    The program shows "Sorry, try again," as it did before. 


Open main5.py. What do you expect line 11 to do? 
    I expect this to give the "correct" message back, no matter what letters are capitalized in "red"

What problem is it trying to solve? 
    This is trying to solve the "incorrect" message that appears when an unrecognized variation of the correct answer is entered. 

Run the program and answer the question. What happens if you add spaces before or after the word (i.e., “  RED  “ or “ red”)?
    When spaces are added, the program does not recognize the answer as correct. 


Open main6.py. How is line 11 different than main5.py?
    There is an additional part of the command added, labeled ".strip()"

What would you guess .strip() is doing? 
    I would assume that strip is trying to solve the problem of spaces causing answers to be incorrect. 

Run the program and answer the question. Is there another way of writing “red” that will break this logic?
    If you insert spaces between every letter of "red", then the program will not recognize your answer as correct. This also happens if you add any other symbols, such as a question mark.



Open main7.py. Before running this program, how do you expect this to be different than main6.py? 
    I expect this program to offer another possible outcome from the input "pink". 
What is the purpose of line 11? 
    line 11 is attempting to solve the problem posed when spaces or capitalizations are added. 

Run the program and answer the question.



Open main8.py. What is the purpose of line 11?
    The added "!" shows that while color is not equal to red, but rather other words or colors, certain phrases will be put out in reply to certain answers being put in.  

Why are lines 12–19 indented? 
    These lines are all sub-commands of the "while" command. 

Run the program. What would happen if line 12 were moved before line 11 (and no longer indented)? 
    If 12 and 11 are switched, then the program does not give back an answer. 

Make that change and run the program again. To end any Python program, you can type ctrl-c.



Open main9.py. What is happening on line 12? 
    on line 12, the program is commanding that while color is not equal to red, certain answers will be put out. 
What is the purpose of “count”? 
    the count command recognizes how many times an answer is input, then returns a message at the end with that number attached. 
What is happening on line 22? 
    This is the line that calls back the number which was recorded with "count."

Run the program.


*Extra credit:* open main10.py. Add a comment to each line describing what it is doing (a comment follows a pound sign [#]). 

Commit your changes and push them back to the repository. 

Did you do the extra credit?
    I completed every line that I had some understanding of!